package ${package}.${servicename}.controller;

import com.alibaba.fastjson.JSONObject;
import ${package}.common.web.exception.BusinessException;
import ${package}.common.web.annotation.GenericResponseBody;
import ${package}.${servicename}.api.client.mapping.${className}Mapping;
import ${package}.${servicename}.api.dto.request.*;
import ${package}.${servicename}.api.dto.response.*;
import ${package}.${servicename}.api.vo.${className}Vo;
import ${package}.${servicename}.service.I${className}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;


/**
 * ${comments}
 */
@Api(tags = "${className}Controller",
        value="${className}Controller",
        description = "${comments}微服务接口")

@RestController
public class ${className}Controller {
    private static final Logger LOG = LoggerFactory.getLogger(${className}Controller.class);
    @Autowired
    private I${className}Service ${classname}Service;

    @ApiOperation(value = "获取${comments}列表", notes = "获取${comments}列表")
    @PostMapping(value = ${className}Mapping.SELECT_${classNAME}_LIST,
            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    @GenericResponseBody
    public Select${className}ListResponse select${className}List(@RequestBody Select${className}ListRequest request) {
        return ${classname}Service.select${className}List(request);
    }

    @ApiOperation(value = "查询${comments}信息", notes = "${comments}信息")
    @PostMapping(value = ${className}Mapping.GET_${classNAME},
            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    @GenericResponseBody
    public Get${className}Response get${className}(@RequestBody Get${className}Request request) {
        return ${classname}Service.get${className}(request);
    }

    @ApiOperation(value = "删除${comments}信息", notes = "删除${comments}信息")
    @PostMapping(value = ${className}Mapping.DELETE_${classNAME},
            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    @GenericResponseBody
    public Boolean delete${className}(@RequestBody Delete${className}Request request) {
        return ${classname}Service.delete${className}(request);
    }

    @ApiOperation(value = "更新${comments}信息", notes = "更新${comments}信息")
    @PostMapping(value = ${className}Mapping.UPDATE_${classNAME},
            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    @GenericResponseBody
    public Boolean update${className}(@RequestBody Update${className}Request request) {
        return ${classname}Service.update${className}(request);
    }

    @ApiOperation(value = "创建${comments}信息", notes = "创建${comments}信息")
    @PostMapping(value = ${className}Mapping.CREATE_${classNAME},
            produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    @GenericResponseBody
    public Boolean create${className}(@RequestBody Create${className}Request request) {
        return ${classname}Service.create${className}(request);
    }

}
